2024-05-12 17:22:25,451{GMT}	INFO	[jepsen test runner] jepsen.core: Test version da020ba8de84616e93ba9f9d237fe067852884f1 (plus uncommitted changes)
2024-05-12 17:22:25,451{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin /go/bin/broadcast --node-count 1 --time-limit 20 --rate 10
2024-05-12 17:22:25,637{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x36cc6055"
         "maelstrom.db$db$reify__16142@36cc6055"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x685efb22" "2024-05-12T17:22:25.412Z"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x24a696c0"
         "maelstrom.net$jepsen_net$reify__15251@24a696c0"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x78fb4f7f"
         "maelstrom.workload.broadcast$client$reify__16644@78fb4f7f"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x6a7c1725"
         "java.util.concurrent.CyclicBarrier@6a7c1725"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x756476a3"
         "jepsen.checker$compose$reify__11881@756476a3"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "/go/bin/broadcast"
  "--node-count"
  "1"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@65e4ee59"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@4746d52d"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/go/bin/broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x60877629"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@60877629"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x7e86ff3b"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@7e86ff3b"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0xd332ebc"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@d332ebc"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x56de370d"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@56de370d"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x1f6865ca"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x6044311a"
         "maelstrom.net$jepsen_os$reify__15254@6044311a"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-05-12 17:22:28,143{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-05-12 17:22:28,144{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-05-12 17:22:28,146{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-05-12 17:22:28,149{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-05-12 17:22:28,159{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-05-12 17:22:28,160{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /go/bin/broadcast []
2024-05-12 17:22:28,187{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-05-12 17:22:28,216{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2024-05-12 17:22:28,235{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 0, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:28,405{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:broadcast	1
2024-05-12 17:22:28,417{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 1, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:28,419{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:broadcast	2
2024-05-12 17:22:28,430{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 2, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:28,510{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:broadcast	3
2024-05-12 17:22:28,520{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 3, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:28,610{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:broadcast	4
2024-05-12 17:22:28,619{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 4, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:28,713{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:read	nil
2024-05-12 17:22:28,715{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:ok	:read	[0 1 2 3 4]
2024-05-12 17:22:28,842{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	5
2024-05-12 17:22:28,851{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 5, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:28,862{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:read	nil
2024-05-12 17:22:28,864{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:ok	:read	[0 1 2 3 4 5]
2024-05-12 17:22:28,876{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:read	nil
2024-05-12 17:22:28,878{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:ok	:read	[0 1 2 3 4 5]
2024-05-12 17:22:28,957{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:broadcast	6
2024-05-12 17:22:28,965{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 6, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:28,987{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:broadcast	7
2024-05-12 17:22:28,996{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 7, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:29,156{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:read	nil
2024-05-12 17:22:29,158{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:ok	:read	[0 1 2 3 4 5 6 7]
2024-05-12 17:22:29,197{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:broadcast	8
2024-05-12 17:22:29,207{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 8, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:29,330{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:broadcast	9
2024-05-12 17:22:29,338{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 9, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:29,367{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-05-12 17:22:29,368{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:read	[0 1 2 3 4 5 6 7 8 9]
2024-05-12 17:22:29,480{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-05-12 17:22:29,482{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:read	[0 1 2 3 4 5 6 7 8 9]
2024-05-12 17:22:29,674{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-05-12 17:22:29,676{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:read	[0 1 2 3 4 5 6 7 8 9]
2024-05-12 17:22:29,677{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-05-12 17:22:29,678{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:read	[0 1 2 3 4 5 6 7 8 9]
2024-05-12 17:22:29,804{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-05-12 17:22:29,805{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:read	[0 1 2 3 4 5 6 7 8 9]
2024-05-12 17:22:29,963{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-05-12 17:22:29,965{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:read	[0 1 2 3 4 5 6 7 8 9]
2024-05-12 17:22:30,074{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	10
2024-05-12 17:22:30,082{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 10, :msg_id 7}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 7, :message nil, :msg_id 7, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:30,196{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:broadcast	11
2024-05-12 17:22:30,213{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 11, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:30,390{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:broadcast	12
2024-05-12 17:22:30,399{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 12, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:30,587{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:invoke	:broadcast	13
2024-05-12 17:22:30,595{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 13 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 13, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:30,698{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:read	nil
2024-05-12 17:22:30,700{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-05-12 17:22:30,738{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:read	nil
2024-05-12 17:22:30,740{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-05-12 17:22:30,831{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:read	nil
2024-05-12 17:22:30,832{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-05-12 17:22:30,968{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:broadcast	14
2024-05-12 17:22:30,974{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 14 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 14, :msg_id 4}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 4, :message nil, :msg_id 4, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:31,071{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:read	nil
2024-05-12 17:22:31,073{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14]
2024-05-12 17:22:31,098{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:read	nil
2024-05-12 17:22:31,099{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14]
2024-05-12 17:22:31,149{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:broadcast	15
2024-05-12 17:22:31,162{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 15 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 15, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:31,326{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:invoke	:broadcast	16
2024-05-12 17:22:31,340{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 16 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 16, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:31,427{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:invoke	:read	nil
2024-05-12 17:22:31,429{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]
2024-05-12 17:22:31,599{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:invoke	:broadcast	17
2024-05-12 17:22:31,605{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 17 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 17, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:31,708{GMT}	INFO	[jepsen worker 0] jepsen.util: 18	:invoke	:broadcast	18
2024-05-12 17:22:31,712{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 18 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 18, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:31,765{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:invoke	:broadcast	19
2024-05-12 17:22:31,785{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 19 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 19, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:31,841{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:read	nil
2024-05-12 17:22:31,843{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]
2024-05-12 17:22:31,931{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:read	nil
2024-05-12 17:22:31,933{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]
2024-05-12 17:22:31,995{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:read	nil
2024-05-12 17:22:31,996{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]
2024-05-12 17:22:32,040{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:broadcast	20
2024-05-12 17:22:32,045{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 20 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 20, :msg_id 4}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 4, :message nil, :msg_id 4, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:32,084{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:read	nil
2024-05-12 17:22:32,085{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]
2024-05-12 17:22:32,181{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:read	nil
2024-05-12 17:22:32,184{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]
2024-05-12 17:22:32,350{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:read	nil
2024-05-12 17:22:32,351{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]
2024-05-12 17:22:32,546{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:read	nil
2024-05-12 17:22:32,547{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]
2024-05-12 17:22:32,673{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:broadcast	21
2024-05-12 17:22:32,678{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 21 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 21, :msg_id 5}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 5, :message nil, :msg_id 5, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:32,834{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	22
2024-05-12 17:22:32,840{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 22 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 22, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:32,936{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:invoke	:read	nil
2024-05-12 17:22:32,938{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22]
2024-05-12 17:22:33,130{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:invoke	:broadcast	23
2024-05-12 17:22:33,136{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 23 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 23, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:33,230{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:read	nil
2024-05-12 17:22:33,232{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]
2024-05-12 17:22:33,354{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:broadcast	24
2024-05-12 17:22:33,358{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 24 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 24, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:33,370{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:read	nil
2024-05-12 17:22:33,371{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24]
2024-05-12 17:22:33,518{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:read	nil
2024-05-12 17:22:33,520{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24]
2024-05-12 17:22:33,576{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:broadcast	25
2024-05-12 17:22:33,584{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 25 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 25, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:33,607{GMT}	INFO	[jepsen worker 0] jepsen.util: 26	:invoke	:broadcast	26
2024-05-12 17:22:33,612{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 26 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 26, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:33,676{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:broadcast	27
2024-05-12 17:22:33,682{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 27 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 27, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:33,821{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:broadcast	28
2024-05-12 17:22:33,832{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 28 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 28, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:33,835{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:broadcast	29
2024-05-12 17:22:33,846{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 29 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 29, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:33,955{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:broadcast	30
2024-05-12 17:22:33,962{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 30 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 30, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:34,108{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:invoke	:read	nil
2024-05-12 17:22:34,109{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]
2024-05-12 17:22:34,240{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:invoke	:broadcast	31
2024-05-12 17:22:34,247{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 31 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 31, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:34,260{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:read	nil
2024-05-12 17:22:34,262{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
2024-05-12 17:22:34,455{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:read	nil
2024-05-12 17:22:34,457{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
2024-05-12 17:22:34,627{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:read	nil
2024-05-12 17:22:34,628{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
2024-05-12 17:22:34,806{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	32
2024-05-12 17:22:34,810{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 32 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 32, :msg_id 4}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 4, :message nil, :msg_id 4, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:34,840{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:read	nil
2024-05-12 17:22:34,841{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32]
2024-05-12 17:22:35,031{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	33
2024-05-12 17:22:35,035{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 33 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 33, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:35,176{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:read	nil
2024-05-12 17:22:35,178{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33]
2024-05-12 17:22:35,280{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:read	nil
2024-05-12 17:22:35,281{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33]
2024-05-12 17:22:35,442{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:broadcast	34
2024-05-12 17:22:35,447{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 34 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 34, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:35,571{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:invoke	:read	nil
2024-05-12 17:22:35,572{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34]
2024-05-12 17:22:35,593{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:invoke	:broadcast	35
2024-05-12 17:22:35,598{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 35 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 35, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:35,650{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	36
2024-05-12 17:22:35,656{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 36 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 36, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:35,808{GMT}	INFO	[jepsen worker 0] jepsen.util: 37	:invoke	:broadcast	37
2024-05-12 17:22:35,811{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 37 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 37, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:35,908{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:read	nil
2024-05-12 17:22:35,910{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37]
2024-05-12 17:22:36,080{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:broadcast	38
2024-05-12 17:22:36,084{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 38 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 38, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:36,270{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:read	nil
2024-05-12 17:22:36,271{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
2024-05-12 17:22:36,343{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:read	nil
2024-05-12 17:22:36,344{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
2024-05-12 17:22:36,497{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:read	nil
2024-05-12 17:22:36,498{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
2024-05-12 17:22:36,670{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:read	nil
2024-05-12 17:22:36,671{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
2024-05-12 17:22:36,869{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:broadcast	39
2024-05-12 17:22:36,876{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 39 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 39, :msg_id 5}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 5, :message nil, :msg_id 5, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:36,880{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:read	nil
2024-05-12 17:22:36,881{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]
2024-05-12 17:22:37,061{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:broadcast	40
2024-05-12 17:22:37,065{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 40 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 40, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:37,176{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:read	nil
2024-05-12 17:22:37,178{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40]
2024-05-12 17:22:37,247{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:read	nil
2024-05-12 17:22:37,248{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40]
2024-05-12 17:22:37,286{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:broadcast	41
2024-05-12 17:22:37,290{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 41 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 41, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:37,371{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:broadcast	42
2024-05-12 17:22:37,375{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 42 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 42, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:37,486{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:read	nil
2024-05-12 17:22:37,488{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42]
2024-05-12 17:22:37,553{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:broadcast	43
2024-05-12 17:22:37,558{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 43 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 43, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:37,691{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:read	nil
2024-05-12 17:22:37,693{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43]
2024-05-12 17:22:37,884{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:read	nil
2024-05-12 17:22:37,897{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43]
2024-05-12 17:22:38,027{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:read	nil
2024-05-12 17:22:38,029{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43]
2024-05-12 17:22:38,136{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:broadcast	44
2024-05-12 17:22:38,142{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 44 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 44, :msg_id 4}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 4, :message nil, :msg_id 4, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:38,181{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:broadcast	45
2024-05-12 17:22:38,186{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 45 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 45, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:38,292{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:read	nil
2024-05-12 17:22:38,294{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45]
2024-05-12 17:22:38,439{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:broadcast	46
2024-05-12 17:22:38,443{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 46 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 46, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:38,458{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:broadcast	47
2024-05-12 17:22:38,462{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 47 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 47, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:38,642{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:broadcast	48
2024-05-12 17:22:38,646{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 48 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 48, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:38,836{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:read	nil
2024-05-12 17:22:38,838{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48]
2024-05-12 17:22:38,935{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:broadcast	49
2024-05-12 17:22:38,939{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 49 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 49, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:39,122{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:invoke	:read	nil
2024-05-12 17:22:39,123{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]
2024-05-12 17:22:39,148{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:invoke	:read	nil
2024-05-12 17:22:39,149{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]
2024-05-12 17:22:39,278{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:invoke	:broadcast	50
2024-05-12 17:22:39,286{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 50 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 50, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:39,306{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:invoke	:broadcast	51
2024-05-12 17:22:39,310{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 51 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 51, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:39,359{GMT}	INFO	[jepsen worker 0] jepsen.util: 52	:invoke	:broadcast	52
2024-05-12 17:22:39,362{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 52 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 52, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:39,424{GMT}	INFO	[jepsen worker 0] jepsen.util: 53	:invoke	:broadcast	53
2024-05-12 17:22:39,428{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 53 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 53, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:39,449{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:invoke	:broadcast	54
2024-05-12 17:22:39,454{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 54 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 54, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:39,625{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:read	nil
2024-05-12 17:22:39,627{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54]
2024-05-12 17:22:39,645{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:read	nil
2024-05-12 17:22:39,646{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54]
2024-05-12 17:22:39,753{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:read	nil
2024-05-12 17:22:39,754{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54]
2024-05-12 17:22:39,841{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:read	nil
2024-05-12 17:22:39,842{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54]
2024-05-12 17:22:39,891{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:broadcast	55
2024-05-12 17:22:39,895{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 55 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 55, :msg_id 5}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 5, :message nil, :msg_id 5, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:40,041{GMT}	INFO	[jepsen worker 0] jepsen.util: 56	:invoke	:broadcast	56
2024-05-12 17:22:40,045{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 56 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 56, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:40,203{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:read	nil
2024-05-12 17:22:40,204{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56]
2024-05-12 17:22:40,236{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:broadcast	57
2024-05-12 17:22:40,239{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 57 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 57, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:40,281{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:invoke	:read	nil
2024-05-12 17:22:40,283{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57]
2024-05-12 17:22:40,398{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:invoke	:read	nil
2024-05-12 17:22:40,399{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57]
2024-05-12 17:22:40,565{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:invoke	:broadcast	58
2024-05-12 17:22:40,569{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 58 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 58, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:40,582{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:invoke	:read	nil
2024-05-12 17:22:40,584{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58]
2024-05-12 17:22:40,777{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:invoke	:broadcast	59
2024-05-12 17:22:40,780{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 59 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 59, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:40,795{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:invoke	:read	nil
2024-05-12 17:22:40,796{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]
2024-05-12 17:22:40,872{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:invoke	:broadcast	60
2024-05-12 17:22:40,875{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 60 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 60, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:40,965{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	61
2024-05-12 17:22:40,969{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 61 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 61, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:41,048{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,049{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,072{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,074{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,123{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,125{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,205{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,207{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,267{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,268{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,423{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,424{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,487{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,488{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,675{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-05-12 17:22:41,676{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
2024-05-12 17:22:41,730{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:broadcast	62
2024-05-12 17:22:41,739{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 62 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 62, :msg_id 9}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 9, :message nil, :msg_id 9, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:41,790{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:broadcast	63
2024-05-12 17:22:41,795{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 63 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 63, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:41,937{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:invoke	:read	nil
2024-05-12 17:22:41,939{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63]
2024-05-12 17:22:41,971{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:invoke	:read	nil
2024-05-12 17:22:41,972{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63]
2024-05-12 17:22:41,994{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:invoke	:broadcast	64
2024-05-12 17:22:41,998{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 64 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 64, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:42,057{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:invoke	:read	nil
2024-05-12 17:22:42,058{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64]
2024-05-12 17:22:42,168{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:invoke	:read	nil
2024-05-12 17:22:42,169{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64]
2024-05-12 17:22:42,368{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:invoke	:read	nil
2024-05-12 17:22:42,369{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64]
2024-05-12 17:22:42,434{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:invoke	:broadcast	65
2024-05-12 17:22:42,437{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 65 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 65, :msg_id 4}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 4, :message nil, :msg_id 4, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:42,599{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:read	nil
2024-05-12 17:22:42,600{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65]
2024-05-12 17:22:42,676{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:read	nil
2024-05-12 17:22:42,676{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65]
2024-05-12 17:22:42,744{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:read	nil
2024-05-12 17:22:42,744{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65]
2024-05-12 17:22:42,816{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:read	nil
2024-05-12 17:22:42,817{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65]
2024-05-12 17:22:42,864{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:broadcast	66
2024-05-12 17:22:42,867{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 66 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 66, :msg_id 5}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 5, :message nil, :msg_id 5, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:43,062{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:read	nil
2024-05-12 17:22:43,064{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66]
2024-05-12 17:22:43,231{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:read	nil
2024-05-12 17:22:43,232{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66]
2024-05-12 17:22:43,348{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:broadcast	67
2024-05-12 17:22:43,355{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 67 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 67, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:43,511{GMT}	INFO	[jepsen worker 0] jepsen.util: 68	:invoke	:broadcast	68
2024-05-12 17:22:43,514{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 68 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 68, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:43,595{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:read	nil
2024-05-12 17:22:43,596{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68]
2024-05-12 17:22:43,624{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:broadcast	69
2024-05-12 17:22:43,627{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 69 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 69, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:43,673{GMT}	INFO	[jepsen worker 0] jepsen.util: 70	:invoke	:read	nil
2024-05-12 17:22:43,674{GMT}	INFO	[jepsen worker 0] jepsen.util: 70	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69]
2024-05-12 17:22:43,765{GMT}	INFO	[jepsen worker 0] jepsen.util: 70	:invoke	:read	nil
2024-05-12 17:22:43,766{GMT}	INFO	[jepsen worker 0] jepsen.util: 70	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69]
2024-05-12 17:22:43,789{GMT}	INFO	[jepsen worker 0] jepsen.util: 70	:invoke	:broadcast	70
2024-05-12 17:22:43,792{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 70 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 70, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:43,969{GMT}	INFO	[jepsen worker 0] jepsen.util: 71	:invoke	:broadcast	71
2024-05-12 17:22:43,972{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 71 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 71, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:44,018{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:invoke	:broadcast	72
2024-05-12 17:22:44,020{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 72 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 72, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:44,140{GMT}	INFO	[jepsen worker 0] jepsen.util: 73	:invoke	:read	nil
2024-05-12 17:22:44,141{GMT}	INFO	[jepsen worker 0] jepsen.util: 73	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72]
2024-05-12 17:22:44,167{GMT}	INFO	[jepsen worker 0] jepsen.util: 73	:invoke	:broadcast	73
2024-05-12 17:22:44,172{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 73 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 73, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:44,225{GMT}	INFO	[jepsen worker 0] jepsen.util: 74	:invoke	:broadcast	74
2024-05-12 17:22:44,238{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 74 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 74, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:44,317{GMT}	INFO	[jepsen worker 0] jepsen.util: 75	:invoke	:broadcast	75
2024-05-12 17:22:44,320{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 75 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 75, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:44,419{GMT}	INFO	[jepsen worker 0] jepsen.util: 76	:invoke	:read	nil
2024-05-12 17:22:44,420{GMT}	INFO	[jepsen worker 0] jepsen.util: 76	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75]
2024-05-12 17:22:44,599{GMT}	INFO	[jepsen worker 0] jepsen.util: 76	:invoke	:broadcast	76
2024-05-12 17:22:44,604{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 76 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 76, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:44,700{GMT}	INFO	[jepsen worker 0] jepsen.util: 77	:invoke	:read	nil
2024-05-12 17:22:44,701{GMT}	INFO	[jepsen worker 0] jepsen.util: 77	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76]
2024-05-12 17:22:44,809{GMT}	INFO	[jepsen worker 0] jepsen.util: 77	:invoke	:broadcast	77
2024-05-12 17:22:44,812{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 77 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 77, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:44,966{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:invoke	:broadcast	78
2024-05-12 17:22:44,976{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 78 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 78, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:45,058{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:read	nil
2024-05-12 17:22:45,059{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78]
2024-05-12 17:22:45,204{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:read	nil
2024-05-12 17:22:45,205{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78]
2024-05-12 17:22:45,228{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:broadcast	79
2024-05-12 17:22:45,231{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 79 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 79, :msg_id 3}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 3, :message nil, :msg_id 3, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:45,347{GMT}	INFO	[jepsen worker 0] jepsen.util: 80	:invoke	:broadcast	80
2024-05-12 17:22:45,351{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 80 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 80, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:45,512{GMT}	INFO	[jepsen worker 0] jepsen.util: 81	:invoke	:broadcast	81
2024-05-12 17:22:45,515{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 81 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 81, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:45,657{GMT}	INFO	[jepsen worker 0] jepsen.util: 82	:invoke	:broadcast	82
2024-05-12 17:22:45,660{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 82 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 82, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:45,778{GMT}	INFO	[jepsen worker 0] jepsen.util: 83	:invoke	:broadcast	83
2024-05-12 17:22:45,782{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 83 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 83, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:45,802{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	84
2024-05-12 17:22:45,807{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 84 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 84, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:45,851{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:invoke	:read	nil
2024-05-12 17:22:45,852{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84]
2024-05-12 17:22:45,965{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:invoke	:read	nil
2024-05-12 17:22:45,967{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84]
2024-05-12 17:22:46,003{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:invoke	:read	nil
2024-05-12 17:22:46,004{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84]
2024-05-12 17:22:46,078{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:invoke	:broadcast	85
2024-05-12 17:22:46,081{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 85 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 85, :msg_id 4}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 4, :message nil, :msg_id 4, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:46,167{GMT}	INFO	[jepsen worker 0] jepsen.util: 86	:invoke	:read	nil
2024-05-12 17:22:46,168{GMT}	INFO	[jepsen worker 0] jepsen.util: 86	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85]
2024-05-12 17:22:46,246{GMT}	INFO	[jepsen worker 0] jepsen.util: 86	:invoke	:broadcast	86
2024-05-12 17:22:46,250{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 86 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 86, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:46,283{GMT}	INFO	[jepsen worker 0] jepsen.util: 87	:invoke	:broadcast	87
2024-05-12 17:22:46,286{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 87 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 87, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:46,326{GMT}	INFO	[jepsen worker 0] jepsen.util: 88	:invoke	:broadcast	88
2024-05-12 17:22:46,331{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 88 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 88, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:46,429{GMT}	INFO	[jepsen worker 0] jepsen.util: 89	:invoke	:broadcast	89
2024-05-12 17:22:46,432{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 89 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 89, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:46,553{GMT}	INFO	[jepsen worker 0] jepsen.util: 90	:invoke	:broadcast	90
2024-05-12 17:22:46,556{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 90 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 90, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:46,562{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:invoke	:read	nil
2024-05-12 17:22:46,563{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90]
2024-05-12 17:22:46,720{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:invoke	:broadcast	91
2024-05-12 17:22:46,723{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 91 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 91, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:46,917{GMT}	INFO	[jepsen worker 0] jepsen.util: 92	:invoke	:read	nil
2024-05-12 17:22:46,918{GMT}	INFO	[jepsen worker 0] jepsen.util: 92	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91]
2024-05-12 17:22:47,051{GMT}	INFO	[jepsen worker 0] jepsen.util: 92	:invoke	:broadcast	92
2024-05-12 17:22:47,054{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 92 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 92, :msg_id 2}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message nil, :msg_id 2, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:47,194{GMT}	INFO	[jepsen worker 0] jepsen.util: 93	:invoke	:broadcast	93
2024-05-12 17:22:47,198{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 93 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 93, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:47,284{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:read	nil
2024-05-12 17:22:47,285{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93]
2024-05-12 17:22:47,336{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:read	nil
2024-05-12 17:22:47,338{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93]
2024-05-12 17:22:47,456{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:read	nil
2024-05-12 17:22:47,458{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93]
2024-05-12 17:22:47,481{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:read	nil
2024-05-12 17:22:47,483{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93]
2024-05-12 17:22:47,594{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:read	nil
2024-05-12 17:22:47,595{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93]
2024-05-12 17:22:47,720{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:broadcast	94
2024-05-12 17:22:47,724{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 94 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 94, :msg_id 6}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 6, :message nil, :msg_id 6, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:47,888{GMT}	INFO	[jepsen worker 0] jepsen.util: 95	:invoke	:broadcast	95
2024-05-12 17:22:47,892{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 95 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 95, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:48,078{GMT}	INFO	[jepsen worker 0] jepsen.util: 96	:invoke	:broadcast	96
2024-05-12 17:22:48,089{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 96 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 96, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message nil, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-05-12 17:22:48,090{GMT}	INFO	[jepsen worker nemesis] jepsen.generator.interpreter: Waiting for recovery...
2024-05-12 17:22:58,091{GMT}	INFO	[jepsen worker 0] jepsen.util: 97	:invoke	:read	nil
2024-05-12 17:22:58,093{GMT}	INFO	[jepsen worker 0] jepsen.util: 97	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96]
2024-05-12 17:22:58,140{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-05-12 17:22:58,352{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-05-12 17:22:59,166{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-05-12 17:22:59,167{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2024-05-12 17:23:01,295{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2024-05-12 17:23:01,325{GMT}	INFO	[jepsen results] jepsen.store: Wrote /workspaces/Broadcast-System/broadcast-system/maelstrom/store/broadcast/20240512T172225.412Z/results.edn
2024-05-12 17:23:01,383{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true,
              :exceptions ({:count 97,
                            :class clojure.lang.ExceptionInfo,
                            :example #jepsen.history.Op{:index 1,
                                                        :time 61750783,
                                                        :type :info,
                                                        :process 0,
                                                        :f :broadcast,
                                                        :value 0,
                                                        :exception {:via [{:type clojure.lang.ExceptionInfo,
                                                                           :message "Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:type \"broadcast\", :message 0, :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"broadcast_ok\"), {:k :msg_id} Int, :in_reply_to Int}\n\n... but instead received\n\n{:in_reply_to 1, :message nil, :msg_id 1, :type \"broadcast_ok\"}\n\nThis is malformed because:\n\n{:message disallowed-key}\n\nSee doc/protocol.md for more guidance.",
                                                                           :data {:type :malformed-rpc-response,
                                                                                  :body {:in_reply_to 1,
                                                                                         :message nil,
                                                                                         :msg_id 1,
                                                                                         :type "broadcast_ok"}},
                                                                           :at [slingshot.support$stack_trace
                                                                                invoke
                                                                                "support.clj"
                                                                                201]}],
                                                                    :trace [[slingshot.support$stack_trace
                                                                             invoke
                                                                             "support.clj"
                                                                             201]
                                                                            [maelstrom.client$check_body
                                                                             invokeStatic
                                                                             "client.clj"
                                                                             188]
                                                                            [maelstrom.client$check_body
                                                                             invoke
                                                                             "client.clj"
                                                                             181]
                                                                            [maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566
                                                                             invoke
                                                                             "broadcast.clj"
                                                                             27]
                                                                            [maelstrom.workload.broadcast$fn__16565$broadcast_BANG___16566
                                                                             invoke
                                                                             "broadcast.clj"
                                                                             27]
                                                                            [maelstrom.workload.broadcast$client$reify__16644
                                                                             invoke_BANG_
                                                                             "broadcast.clj"
                                                                             203]
                                                                            [jepsen.client.Validate
                                                                             invoke_BANG_
                                                                             "client.clj"
                                                                             83]
                                                                            [jepsen.generator.interpreter.ClientWorker
                                                                             invoke_BANG_
                                                                             "interpreter.clj"
                                                                             65]
                                                                            [jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909
                                                                             invoke
                                                                             "interpreter.clj"
                                                                             140]
                                                                            [jepsen.generator.interpreter$spawn_worker$fn__12908
                                                                             invoke
                                                                             "interpreter.clj"
                                                                             123]
                                                                            [clojure.core$binding_conveyor_fn$fn__5823
                                                                             invoke
                                                                             "core.clj"
                                                                             2047]
                                                                            [clojure.lang.AFn
                                                                             call
                                                                             "AFn.java"
                                                                             18]
                                                                            [java.util.concurrent.FutureTask
                                                                             run
                                                                             "FutureTask.java"
                                                                             264]
                                                                            [java.util.concurrent.ThreadPoolExecutor
                                                                             runWorker
                                                                             "ThreadPoolExecutor.java"
                                                                             1128]
                                                                            [java.util.concurrent.ThreadPoolExecutor$Worker
                                                                             run
                                                                             "ThreadPoolExecutor.java"
                                                                             628]
                                                                            [java.lang.Thread
                                                                             run
                                                                             "Thread.java"
                                                                             829]],
                                                                    :cause "Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:type \"broadcast\", :message 0, :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"broadcast_ok\"), {:k :msg_id} Int, :in_reply_to Int}\n\n... but instead received\n\n{:in_reply_to 1, :message nil, :msg_id 1, :type \"broadcast_ok\"}\n\nThis is malformed because:\n\n{:message disallowed-key}\n\nSee doc/protocol.md for more guidance.",
                                                                    :data {:type :malformed-rpc-response,
                                                                           :body {:in_reply_to 1,
                                                                                  :message nil,
                                                                                  :msg_id 1,
                                                                                  :type "broadcast_ok"}}},
                                                        :error "indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:type \"broadcast\", :message 0, :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"broadcast_ok\"), {:k :msg_id} Int, :in_reply_to Int}\n\n... but instead received\n\n{:in_reply_to 1, :message nil, :msg_id 1, :type \"broadcast_ok\"}\n\nThis is malformed because:\n\n{:message disallowed-key}\n\nSee doc/protocol.md for more guidance."}})},
 :stats {:valid? false,
         :count 196,
         :ok-count 99,
         :fail-count 0,
         :info-count 97,
         :by-f {:broadcast {:valid? false,
                            :count 97,
                            :ok-count 0,
                            :fail-count 0,
                            :info-count 97},
                :read {:valid? true,
                       :count 99,
                       :ok-count 99,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.50510204},
 :net {:all {:send-count 396,
             :recv-count 396,
             :msg-count 396,
             :msgs-per-op 2.0204082},
       :clients {:send-count 396, :recv-count 396, :msg-count 396},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:worst-stale (),
            :duplicated-count 0,
            :valid? true,
            :lost-count 0,
            :lost (),
            :stable-count 97,
            :stale-count 0,
            :stale (),
            :never-read-count 0,
            :stable-latencies {0 0, 0.5 0, 0.95 0, 0.99 0, 1 0},
            :attempt-count 97,
            :never-read (),
            :duplicated {}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
